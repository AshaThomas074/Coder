@model Coder.Models.Question
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style type="text/css" media="screen">
    #editor {
        position: absolute;
        top: 162px;
        right: 39px;
        bottom: 139px;
        left: 695px;
        height: 400px;
    }

    .div-input-output{
        width: 608px;
        background-color: lightgray;
        padding: 10px;
    }
</style>

<div class="row">
    <div class="col">
        <section>
            
                <h4>@Model.QuestionHeading</h4>
                <hr />
                
                <div class="sec-left">                   
                    
                   <p>@Html.Raw(Model.QuestionText)
                   </p>
                @if (!string.IsNullOrEmpty(Model.TestCaseInput1))
                {
                    <h5>Sample Input</h5>
                    <div class="div-input-output">
                        <span style="white-space: pre-line">@Model.TestCaseInput1</span>
                    </div>
                }
                @if (!string.IsNullOrEmpty(Model.TestCaseOutput1))
                {
                    <h5>Sample Output</h5>
                    <div class="div-input-output">
                        <span style="white-space: pre-line">@Model.TestCaseOutput1</span>
                    </div>
                }
            </div>
        <!--   <div id="runresult">
                <h5>Test result</h5>
                <p>
                    Static initialization blocks are executed when the class is loaded, and you can initialize static variables in those blocks.
                    It's time to test your knowledge of Static initialization blocks. You can read about it here.
                    You are given a class Solution with a main method. Complete the given code so that it outputs
                    the area of a parallelogram with breadth  and height . You should read the variables from the standard input.
                </p>
                <p>
                    Static initialization blocks are executed when the class is loaded, and you can initialize static variables in those blocks.
                    It's time to test your knowledge of Static initialization blocks. You can read about it here.
                    You are given a class Solution with a main method. Complete the given code so that it outputs
                    the area of a parallelogram with breadth  and height . You should read the variables from the standard input.
                </p>
                <p>
                    Static initialization blocks are executed when the class is loaded, and you can initialize static variables in those blocks.
                    It's time to test your knowledge of Static initialization blocks. You can read about it here.
                    You are given a class Solution with a main method. Complete the given code so that it outputs
                    the area of a parallelogram with breadth  and height . You should read the variables from the standard input.
                </p>
            </div> -->
        </section>
    </div>

    <div class="col">
        
            <form id="answer" method="post">
                <div class="form-floating">
                    <select name="codelanguage" id="codelanguage" class="select-right">
                        <option value="Java">Java</option>
                        <option value="C_Cpp">C</option>
                        <option value="C_Cpp">C++</option>
                    </select>        
                </div>
            <div class="sec-right">
                
                <div id="editor">
                    @Model.Answer
                </div>
            </div>
          
                <button id="codeRun" type="submit" class="btn btn-outline-primary btn-bottom-1">Run</button>
                <button id="codeSubmit" type="submit" class="btn btn-primary btn-bottom-2">Submit Code</button>
            </form>
        
        
    </div>
</div>

<!-- <script src="~/js/ace.js" type="text/javascript" charset="utf-8"></script> -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.15.3/ace.js" type="text/javascript" charset="utf-8"></script>

<script>
    var editor = ace.edit("editor");
    editor.setTheme("ace/theme/monokai");
    editor.session.setMode("ace/mode/java");
</script>
